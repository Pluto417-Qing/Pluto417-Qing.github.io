<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kittens :: Pluto417-Qing&#39;s Blog</title>
    <link>http://Pluto417-Qing.github.io/kittens/index.html</link>
    <description>Kittens Get All Kittens package main import &#34;github.com/bep/kittn/auth&#34; func main() { api := auth.Authorize(&#34;meowmeowmeow&#34;) _ = api.GetKittens() }&#xD;require &#39;kittn&#39; api = Kittn::APIClient.authorize!(&#39;meowmeowmeow&#39;) api.kittens.get&#xD;import kittn api = kittn.authorize(&#39;meowmeowmeow&#39;) api.kittens.get()&#xD;curl &#34;http://example.com/api/kittens&#34; -H &#34;Authorization: meowmeowmeow&#34;&#xD;const kittn = require(&#39;kittn&#39;); let api = kittn.authorize(&#39;meowmeowmeow&#39;); let kittens = api.kittens.get();&#xD;The above command returns JSON structured like this:&#xA;[ { &#34;id&#34;: 1, &#34;name&#34;: &#34;Fluffums&#34;, &#34;breed&#34;: &#34;calico&#34;, &#34;fluffiness&#34;: 6, &#34;cuteness&#34;: 7 }, { &#34;id&#34;: 2, &#34;name&#34;: &#34;Max&#34;, &#34;breed&#34;: &#34;unknown&#34;, &#34;fluffiness&#34;: 5, &#34;cuteness&#34;: 10 } ]&#xD;This endpoint retrieves all kittens.&#xA;HTTP Request GET http://example.com/api/kittens&#xA;Query Parameters Parameter Default Description include_cats false If set to true, the result will also include cats. available true If set to false, the result will include kittens that have already been adopted.</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <atom:link href="http://Pluto417-Qing.github.io/kittens/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>