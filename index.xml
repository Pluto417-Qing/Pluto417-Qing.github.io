<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hello World :: Pluto417-Qing&#39;s Blog</title>
    <link>http://Pluto417-Qing.github.io/index.html</link>
    <description>欢迎来到我的博客 看过很多技术大佬的博客，身边的同学也有搭建自己的博客分享学习生活的，终于我决定也创建一个自己的博客，想以此激励自己多总结，多表达，多写作。知识是无限的，每天也遇到很多新的内容，希望通过博客，我可以把这些内容分享给大家，一起交流与学习。当然，也想随手记录生活。&#xA;技术心得 学习笔记 个人感悟 有趣的发现 未来的计划 走一步算一步吧，加油！&#xA;下面是我学习的一些编程语言的Hello World程序。&#xA;Python def hello_world(): print(&#34;Welcome to my blog!&#34;) hello_world()&#xD;Java public class HelloWorld { public static void main(String[] args) { System.out.println(&#34;Welcome to my blog!&#34;); } }&#xD;C #include &lt;stdio.h&gt; int main() { printf(&#34;Welcome to my blog!\n&#34;); return 0; }&#xD;C++ #include &lt;iostream&gt; int main() { std::cout &lt;&lt; &#34;Welcome to my blog!&#34; &lt;&lt; std::endl; return 0; }&#xD;HTML &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Welcome to my blog!&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Welcome to my blog!&lt;/h1&gt; &lt;/body&gt; &lt;/html&gt;</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 06 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://Pluto417-Qing.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>博客文章</title>
      <link>http://Pluto417-Qing.github.io/posts/index.html</link>
      <pubDate>Tue, 06 May 2025 00:00:00 +0000</pubDate>
      <guid>http://Pluto417-Qing.github.io/posts/index.html</guid>
      <description>博客文章 在这里您可以找到所有的博客文章，按时间倒序排列。&#xA;Test&#xD;Hello World欢迎来到我的博客 这是我的第一篇博客文章。在这里，我将会分享：&#xA;技术心得 学习笔记 个人感悟 有趣的发现 为什么要写博客？ 写博客不仅可以记录自己的学习和成长历程，还能与他人分享知识和经验。通过写作，我们可以：&#xA;整理思路 加深理解 分享经验 与他人交流 未来的计划 我计划定期更新博客，分享有价值的内容。如果您有任何建议或想法，欢迎与我交流！&#xA;# 这是一个简单的示例代码 def hello_world(): print(&#34;Welcome to my blog!&#34;) hello_world()&#xA;SVG图形绘制与展示的逻辑之前写大作业小游戏的时候就遇到过要自己找图片资源，当时第一次接触SVG图像，根本不了解，最近决定好好学习一下SVG。&#xA;SVG是一种基于XML的矢量图形格式，它可以用来定义二维图形，且与常见的位图不同，缩放不会影响画质。因为它是用XML描述绘制图形的方法的，而不是像位图一样直接保存图片的单个像素点。&#xA;关键概念 画布 ：无穷大，是绘制图形的区域。 裁切层 ：控制显示区域的框，在画布上框选出特定的区域来显示。 SVG区域大小 ：大小在svg标签中设定。也是最后页面上显示图片的大小。 解释 在写SVG代码的时候一开始会创建一个SVG标签：&#xA;&lt;svg width=&#34;400&#34; height=&#34;400&#34;&gt; &lt;/svg&gt;&#xD;这个就是要显示的SVG区域的大小。而SVG图形的绘制是在画布上进行的，这个画布我们是看不见的，同时画布有无穷大。我们可以在画布上绘制任意的图形，但是最后显示的SVG图片大小是固定的，当画布上绘制的图形大小与SVG区域大小不一致时，我们怎么控制显示画布上哪一部分呢？这时候就要用到裁切层来在画布上选择特定的区域来显示。下面先介绍SVG的一些基础的概念。&#xA;坐标区域 SVG坐标区域的原点在左上角，向右为x轴正方向，向下为y轴正方向。 图形绘制 要绘制一个图形就很简单了，比如绘制一个矩形，只要设置它的左上角的坐标，以及长宽高即可，如何要填充颜色可以使用fill属性。&#xA;&lt;svg width=&#34;200&#34; height=&#34;200&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt; &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;100&#34; height=&#34;50&#34; fill=&#34;blue&#34; /&gt; &lt;rect x=&#34;100&#34; y=&#34;100&#34; width=&#34;80&#34; height=&#34;30&#34; fill=&#34;red&#34; /&gt; &lt;/svg&gt;&#xD;&lt;svg width=&#34;200&#34; height=&#34;200&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt; &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;100&#34; height=&#34;50&#34; fill=&#34;blue&#34; /&gt; &lt;rect x=&#34;200&#34; y=&#34;200&#34; width=&#34;80&#34; height=&#34;30&#34; fill=&#34;red&#34; /&gt; &lt;/svg&gt;</description>
    </item>
    <item>
      <title>关于我</title>
      <link>http://Pluto417-Qing.github.io/about/index.html</link>
      <pubDate>Wed, 20 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://Pluto417-Qing.github.io/about/index.html</guid>
      <description>一个苦逼的未来要当程序猿的大学生（哦不已经是了…）</description>
    </item>
  </channel>
</rss>